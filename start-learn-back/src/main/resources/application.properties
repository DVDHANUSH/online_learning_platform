spring.application.name=start-learn-back

#database configure - this configuration will create the bean of datasource, it stores all the data ( code ) that deals with database
#spring.datasource.url = jdbc:mysql://localhost:3306/spring_boot_jpa - this will throw an error if there is no table created already
# Q) how to work with different databases in spring boot
spring.datasource.url=jdbc:mysql://localhost:3306/spring_boot_microservices?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=password

# jpa & hibernate properties
spring.jpa.show-sql = true
# 1) spring.jpa.show-sql = true
# by enabling this, we will be able to see the sql queries that are generated

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# 2) spring.jpa.database-platform=org.hibernate.dialect.MqSQL8dDialect
# to specify the version of the MYSQL

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# 3) spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MqSQL8dDialect
# similar to the 2nd
spring.jpa.hibernate.ddl-auto=update
# this will have either [update - updates the schema if necessary, create - Creates the current schema & destroys the previous session schema, create-drop - Creates the new schema at start of the application and destroys if after the session, none - disable DDL handling, validate -  simply validates the schema & make no changes to it]
spring.jpa.properties.hibernate.format_sql=true

spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB
video.upload.path=uploads/videos

# to give our own userId and password
#spring.security.user.name=dvd
#spring.security.user.password=dvd123

spring.thymeleaf.enabled=true

logging.level.org.springframework.security=DEBUG

server.port=8080